import React, { useEffect, useState } from "react";
import UpdateGrid from "../components/updateGrid";
import Head from "next/head";
import {
  session,
  ENVIRONMENT,
  setClientenvsInSession,
  CLIENT_ENVIRONMENT,
  CONSTANTS,
} from "../lib/util";
import ViewSelector from "../components/views/ViewSelector";
import CurrentMatch from "../components/views/CurrentMatch/CurrentMatch";
import useDashboard from "../hooks/useDashboard";
import { useRouter } from "next/router";

export default function Admin({
  initalTeamsData,
  initalDashboard,
  league,
  clientenvs,
  views,
}) {
  const [isLoggedIn, setIsLoggedIn] = useState(false);
  const [passcode, setPasscode] = useState("");
  const [initClientenvs, setclientenvs] = useState(false);
  const { view, teams, currentMatch, onViewSelectorChnage } = useDashboard({
    initalDashboard,
    clientenvs,
  });
  const router = useRouter();
  useEffect(() => {
    if (!initClientenvs) {
      // add envs to session
      setClientenvsInSession(clientenvs);
      setclientenvs(true);
    }
    session.set("passcode", passcode);

    if (
      session.get("passcode") &&
      session.get("passcode") === ENVIRONMENT.AdminPasscode
    ) {
      setIsLoggedIn(true);

      return;
    }
    setIsLoggedIn(false);
  }, [passcode]);
  if (!isLoggedIn) {
    return (
      <div className="container">
        <label>Enter the passcode</label>
        <div className="w-25">
          <input
            className="w-100"
            type="password"
            value={passcode}
            onChange={(e) => setPasscode(e.target.value)}
          />
        </div>
      </div>
    );
  }
  return (
    <div className="container-fluid">
      <Head>
        <title>Admin Panel</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="w-100">
        <h1 className="my-3">Admin Panel</h1>
        <UpdateGrid data={initalTeamsData.data} league={league} />
        <div className="row justify-content-md-center">
          <div className="col-md-8 col-12  dev">
            <ViewSelector
              views={views}
              initlaView={view}
              onViewSelectorChnage={onViewSelectorChnage}
            />
          </div>
          <div className="col-md-4 col-12 dev">
            <h3 className="text-center">Current Preview</h3>
            <div className="m-1">
              <CurrentMatch
                match={currentMatch}
                matchView={view}
                miniView={true}
              />
              <button
                hidden={view === CONSTANTS.VIEWS.STANDINGS}
                className="btn btn-outline-warning btn-block w-100"
                onClick={() => router.push(`matches`)}
              >
                Update
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

export async function getServerSideProps() {
  const envs = CLIENT_ENVIRONMENT;
  const teamsResponse = await fetch(`${ENVIRONMENT.BaseApiURL}/teams`);
  const leagueResponse = await fetch(`${ENVIRONMENT.BaseApiURL}/league`);
  const dashboardResponse = await fetch(`${ENVIRONMENT.BaseApiURL}/dashboard`);
  const viewsResponse = await fetch(`${ENVIRONMENT.BaseApiURL}/views`);
  const initalTeamsData = await teamsResponse.json();
  const leagues = await leagueResponse.json();
  const initalDashboardData = await dashboardResponse.json();
  const ViewsData = await viewsResponse.json();
  // Pass data to the page via props
  return {
    props: {
      initalDashboard: initalDashboardData["data"],
      initalTeamsData,
      league: leagues["data"],
      clientenvs: envs,
      views: ViewsData["data"],
    },
  };
}
